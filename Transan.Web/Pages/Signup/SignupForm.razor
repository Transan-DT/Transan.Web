@inherits FormBaseComponent<FormSignup>

<div class="my-5">
	<EditForm EditContext=FormEditContext OnValidSubmit=OnValidFormAsync>		
		<DataAnnotationsValidator />
		<ValidationSummary />

		<div class="row justify-content-center mb-5">
			<div class="col-md-8">
				<label class="form-label">Vous êtes...</label>

				<InputSelect @bind-Value=Form.Gender class="form-select form-select-lg">
					<option value="Unknown"></option>
					<option value="Transgender">Transgenre</option>
					<option value="NonBinary">Non-Binaire</option>
					<option value="GenderFluid">Genderfluid</option>
					<option value="Cisgender">Homme/Femme Cisgenre</option>
					<option value="Questioning">En Questionnement</option>
					<option value="Other">Autre</option>
				</InputSelect>
			</div>
		</div>

		@if (Form.Gender is Gender.Cisgender)
		{
			<div class="row justify-content-center my-5">
				<div class="col-md-8">
					<label class="form-label">Qui vous a invité sur notre serveur ? (Entrez son nom d'utilisateur Discord)</label>
					<InputText DisplayName="Parrainage" @bind-Value=Form.ReferalUser class="form-control" maxlength=@FormBase.MaxContentLength />
				</div>
			</div>
		}

		@if (Form.Gender is not Gender.Unknown)
		{
			<div class="row justify-content-center my-5">
				<div class="col-md-8">
					<label class="form-label">Présentez-vous.</label>
					<InputTextArea DisplayName="Présentation" @bind-Value=Form.Presentation class="form-control" style="height: 10rem;" maxlength=@FormBase.MaxContentLength />
				</div>
			</div>

			<div class="row justify-content-center my-5">
				<div class="col-md-8">
					<label class="form-label">Pourquoi souhaitez-vous nous rejoindre ?</label>
					<InputTextArea DisplayName="Motivation" @bind-Value=Form.Motivation class="form-control" style="height: 10rem;" maxlength=@FormBase.MaxContentLength />
				</div>
			</div>

			<div class="row justify-content-center my-5">
				<div class="col-md-8">
					<label class="form-label">
						@(Form.Gender switch
					{
						Gender.Questioning => "Que ressentez-vous, en tant que personne en questionnement ?",
						Gender.Other => "Expliquez-nous votre identité de genre.",
						_ => $"Quelle est votre définition de {Form.Gender.ToDisplayString()} ?"
					})
					</label>

					<InputTextArea DisplayName="Définition Identité de Genre" @bind-Value=Form.OrientationDefinition class="form-control" style="height: 10rem;" maxlength=@FormBase.MaxContentLength />
				</div>
			</div>

			<div class="row justify-content-center my-2">
				<div class="col-md-8">
					<input class="form-check-input" type="checkbox" checked=@confirmFormCheck @onclick=OnConfirmToggle>
					<label class="form-check-label" for="flexCheckDefault">Je confirme l'exactitude des informations envoyées par ce formulaire.</label>
				</div>
			</div>

			<div class="row justify-content-center my-3">
				<div class="col-md-8">
					<button class="btn btn-lg btn-primary px-5" disabled=@(!confirmFormCheck)>Envoyer</button>
				</div>
			</div>
		}
	</EditForm>
</div>

@code {
	private bool confirmFormCheck;

	private void OnConfirmToggle() => confirmFormCheck = !confirmFormCheck;
}
